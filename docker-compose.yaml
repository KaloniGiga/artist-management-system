services:
  #Postgres database
  postgres:
    container_name: postgres-prod
    restart: always
    image: postgres:15-alpine
    ports:
      - 5432:5432
    env_file:
      - docker.env
    networks:
      - backend-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # pg admin
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/root/.pgadmin
    env_file:
      - docker.env
    networks:
      - backend-network

  #backend api
  backend:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    volumes:
      - backend_global_nm:/usr/src/app/node_modules
      - bakcend_local_nm:/usr/src/app/apps/api/node_modules
    env_file:
      - apps/api/.env.development
    command: pnpm --filter api dev
    ports:
      - 4000:4000
    depends_on:
      - postgres
    networks:
      - backend-network

    # frontend web
  frontend:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: development
    container_name: web
    volumes:
      - frontend_global_nm:/usr/src/app/node_modules
      - frontend_local_nm:/usr/src/app/apps/web/node_modules
    env_file:
      - apps/web/.env.local
    command: pnpm --filter web dev
    ports:
      - 3000:3000
    networks:
      - frontend-network

volumes:
  postgres-data:
    driver: local
  pgadmin:
  backend_global_nm:
  bakcend_local_nm:
  frontend_global_nm:
  frontend_local_nm:

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
